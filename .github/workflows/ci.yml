name: 🔍 Continuous Integration

on:
  push:
    branches: [ main, staging, develop ]
  pull_request:
    branches: [ main, staging ]

jobs:
  quality-checks:
    name: 🧪 Quality Checks
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🎨 Check code formatting
        run: npm run format:check
        
      - name: 🔍 Lint code
        run: npm run lint
        
      - name: 📝 Type check
        run: npm run type-check
        
      - name: 🏗️ Build applications
        run: npm run build
        
      - name: 🧪 Run tests (if available)
        run: npm test --if-present

  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔒 Run security audit
        run: npm audit --audit-level=moderate
        
      - name: 📊 Check for outdated packages
        run: npm outdated || true

  dependency-check:
    name: 🔍 Dependency Security Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history to compare changes
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Security audit
        run: npm audit --audit-level=moderate
        
      - name: 📊 Check dependency changes
        run: |
          echo "📋 Checking for dependency changes in this PR..."
          
          # Check if package files were modified
          CHANGED_FILES=$(git diff --name-only origin/main..HEAD | grep -E "(package\.json|package-lock\.json)" || true)
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "📦 Dependency files changed:"
            echo "$CHANGED_FILES"
            
            # Show package.json diff if it exists
            if echo "$CHANGED_FILES" | grep -q "package\.json"; then
              echo ""
              echo "📋 Package.json changes:"
              git diff origin/main..HEAD -- package.json apps/*/package.json || true
            fi
          else
            echo "✅ No dependency changes detected in this PR"
          fi
          
      - name: 🚨 Vulnerability summary
        run: |
          echo "🔒 Running comprehensive security check..."
          
          # Run audit and capture output
          npm audit --json > audit-results.json 2>/dev/null || true
          
          # Check if audit found issues
          if [ -s audit-results.json ]; then
            VULN_COUNT=$(cat audit-results.json | jq -r '.metadata.vulnerabilities.total // 0' 2>/dev/null || echo "0")
            
            if [ "$VULN_COUNT" != "0" ] && [ "$VULN_COUNT" != "null" ]; then
              echo "⚠️ Found $VULN_COUNT vulnerabilities. Run 'npm audit' locally for details."
              
              # Show summary by severity if available
              cat audit-results.json | jq -r '
                if .metadata.vulnerabilities then
                  "Severity breakdown:",
                  "- Critical: \(.metadata.vulnerabilities.critical // 0)",
                  "- High: \(.metadata.vulnerabilities.high // 0)", 
                  "- Moderate: \(.metadata.vulnerabilities.moderate // 0)",
                  "- Low: \(.metadata.vulnerabilities.low // 0)"
                else
                  "Run npm audit for detailed vulnerability information"
                end
              ' 2>/dev/null || echo "Run 'npm audit' locally for detailed vulnerability information"
            else
              echo "✅ No security vulnerabilities detected"
            fi
          else
            echo "✅ No security vulnerabilities detected"
          fi
